package com.Main;

public class GetSortNum {
	//µ¥´ÊÂëÖÖ²éÑ¯
	public int getSortNum(String word) {
		switch (word) {
		case "#":
			return 0;
		case "auto":
			return 1;
		case "break":
			return 2;
		case "case":
			return 3;
		case "char":
			return 4;
		case "const":
			return 5;
		case "continue":
			return 6;
		case "defalut":
			return 7;
		case "do":
			return 8;
		case "double":
			return 9;
		case "eles":
			return 10;
		case "enum":
			return 11;
		case "extern":
			return 12;
		case "float":
			return 13;
		case "for":
			return 14;
		case "goto":
			return 15;
		case "if":
			return 16;
		case "int":
			return 17;
		case "long":
			return 18;
		case "register":
			return 19;
		case "return":
			return 20;
		case "short":
			return 21;
		case "signed":
			return 22;
		case "sizeof":
			return 23;
		case "static":
			return 24;
		case "struct":
			return 25;
		case "switch":
			return 26;
		case "typedef":
			return 27;
		case "union":
			return 28;
		case "unsigned":
			return 29;
		case "void":
			return 30;
		case "volatile":
			return 31;
		case "while":
			return 32;
		case "+":
			return 33;
		case "-":
			return 34;
		case "*":
			return 35;
		case "/":
			return 36;
		case "<":
			return 37;
		case "<=":
			return 38;
		case ">":
			return 39;
		case ">=":
			return 40;
		case "=":
			return 41;
		case "==":
			return 42;
		case "!=":
			return 43;
		case ";":
			return 44;
		case "(":
			return 45;
		case ")":
			return 46;
		case "^":
			return 47;
		case ",":
			return 48;
		case " ":
			return 49;//Ã°ºÅÎ´ÌîĞ´
		case "'":
			return 50;
		case "&":
			return 51;
		case "&&":
			return 52;
		case "|":
			return 53;
		case "||":
			return 54;
		case "%":
			return 55;
		case "~":
			return 56;
		case "<<":
			return 57;
		case ">>":
			return 58;
		case "[":
			return 59;
		case "]":
			return 60;
		case "{":
			return 61;
		case "}":
			return 62;
		case "\"":
			return 63;
		case ".":
			return 64;
		case "?":
			return 65;
		case ":":
			return 66;
		case "!":
			return 67;
		default:
			return -1;
		}
	}

}
